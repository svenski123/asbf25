1.
pragma solidity ^0.8.4;
contract Scope {
    function collect() public payable returns (uint256) {
        assembly {
	    mstore(0, callvalue())
	    return(0, 32)
        }
    }
}

2.
Code appears to create two copies of itself, passing all the paid in call value to one copy and then self-destructs, sending its remaining funds to the second copy. The prepends nine bytes of EVM code to its own code and passes that as the constructor code; the nine bytes then copies thirty bytes of the constructor code after skipping the first nine bytes and returns that as the post-construction code of the new contract. Given the changes to SELFDESTRUCT in the dencun fork, the ability of this code to resurrect itself at previous addresses is somewhat more limited, as nonces will not be reset and thus the addresses generated by CREATE will not repeat.

3.
The code determinates the storage slot for the spending allowance for a given owner and spender, by hashing the owner address plus 0x1000 followed by the spender address.
